$sizeUnit: rem;
$marginKey: 'm';
$paddingKey: 'p';
$separator: '-';
$sizes: (
                ('none', 0),
                ('1', 0.125),
                ('2', 0.25),
                ('3', 0.5),
                ('4', 1),
                ('5', 2),
                ('6', 4),
                ('7', 8),
);
$positions: (
                ('t', 'top'),
                ('r', 'right'),
                ('b', 'bottom'),
                ('l', 'left')
);

@function sizeValue($key, $value) {
  @return if($key == 'none', 0, $value + $sizeUnit);
}

@each $size in $sizes {
  $sizeKey: nth($size, 1);
  $sizeValue: nth($size, 2);

  // margin all sides
  .#{$marginKey}#{$separator}#{$sizeKey} {
    margin: sizeValue($sizeKey, $sizeValue);
  }

  // margin top and bottom
  .#{$marginKey}-y-#{$sizeKey} {
    margin-top: sizeValue($sizeKey, $sizeValue);
    margin-bottom: sizeValue($sizeKey, $sizeValue);
  }

  // padding all sides
  .#{$paddingKey}#{$separator}#{$sizeKey} {
    padding: sizeValue($sizeKey, $sizeValue);
  }

  @each $position in $positions {
    $posKey: nth($position, 1);
    $posValue: nth($position, 2);
    // margin in specific direction (top/right/bottom/left)
    .#{$marginKey}#{$separator}#{$posKey}#{$separator}#{$sizeKey} {
      margin-#{$posValue}: sizeValue($sizeKey, $sizeValue);
    }

    // padding in specific direction (top/right/bottom/left)
    .#{$paddingKey}#{$separator}#{$posKey}#{$separator}#{$sizeKey} {
      padding-#{$posValue}: sizeValue($sizeKey, $sizeValue);
    }
  }
}
